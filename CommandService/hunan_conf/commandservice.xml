<?xml version="1.0" encoding="UTF-8"?>
<configuration>
	<file desc="文件存储配置">
		<property name="onlineBatchSize" desc="上线批量提交数">${onlineBatchSize}</property>
		<property name="onlineBatchTime" desc="上线提交间隔时间">${onlineBatchTime}</property>
		<property name="offlineBatchSize" desc="下线批量提交数">${offlineBatchSize}</property>
		<property name="offlineBatchTime" desc="下线提交间隔时间">${offlineBatchTime}</property>
		<property name="driverHistoryBatchSize" desc="历史批量提交数">${driverHistoryBatchSize}</property>
		<property name="driverHistoryBatchTime" desc="历史提交间隔时间">${driverHistoryBatchTime}</property>
	</file>

	<redis desc="Redis缓存服务客户端配置">
		<property name="host" desc="Redis服务器IP">${redisHost}</property>
		<property name="port" desc="Redis服务器端口">${redisPort}</property>
		<property name="pass" desc="Redis密码">${redisPass}</property>
		<property name="maxActive" desc="最大连接数">50</property>
		<property name="maxIdle" desc="最大空闲连接数">10</property>
		<property name="maxWait" desc="最大等待时间(毫秒)">60000</property>
		<property name="timeOut" desc="连接超时时间">30000</property>
	</redis>
	
	<oracle desc="Oracle缓存服务客户端配置">
		<property name="url" desc="连接路径">${oracleUrl}</property>
		<property name="username" desc="用户名">${oracleUser}</property>
		<property name="password" desc="密码">${oraclePass}</property>
		<property name="maxActive" desc="最大连接数">100</property>
		<property name="minIdle" desc="最小空闲连接数">10</property>
		<property name="initialSize" desc="初始化连接数">10</property>
		<property name="maxWait" desc="最大等待时间">60000</property>
		<property name="timeBetweenEvictionRunsMillis" desc="隔多久才进行一次检测，检测需要关闭的空闲连接">60000</property>
		<property name="minEvictableIdleTimeMillis" desc="连接在池中最小生存的时间">300000</property>
		<property name="maxOpenPreparedStatements" desc="最大预定义缓存数">20</property>
		<property name="testWhileIdle" desc="申请连接的时候检测连接是否有效的值">true</property>
		<property name="testOnBorrow" desc="申请连接前的时候检测连接是否有效的值">true</property>
		<property name="testOnReturn" desc="归还连接时检测连接是否有效的值">false</property>
		<property name="removeAbandoned" desc="显示堆栈信息">true</property>
	</oracle>
	
	<tasks>
		<task name="VehicleCacheTask" enable="true" desc="车辆缓存同步任务">
			<class desc="任务实现类(继承TaskAdapter)">com.ctfo.commandservice.task.VehicleCacheTask</class>
			<interval unit="minute" delay="1" desc="任务间隔">2</interval>
			<properties desc="自定义配置">
				<property name="clearInterval" desc="清理间隔(单位:分钟 ; 默认60分钟)">30</property>
				<property name="sql_syncAll" desc="全量同步查询语句">	SELECT V.VEHICLE_NO, S.SUID, V.VID AS VID, V.PLATE_COLOR AS PLATE_COLOR_ID, M.COMMADDR AS T_IDENTIFYNO, T.OEM_CODE AS OEMCODE, T.TMODEL_CODE, T.TID, V.VIN_CODE, V.ENT_ID AS TEAM_ID, V.VEHICLE_TYPE FROM TB_SIM M	 INNER JOIN TR_SERVICEUNIT S	  ON S.SID = M.SID    INNER JOIN TB_VEHICLE V ON V.VID = S.VID INNER JOIN TB_TERMINAL T ON T.TID = S.TID WHERE COMMADDR IS NOT NULL AND V.ENABLE_FLAG = '1' AND T.ENABLE_FLAG = '1'</property>
				<property name="sql_syncIncrements" desc="增量同步查询语句">SELECT V.VEHICLE_NO, S.SUID, V.VID AS VID, V.PLATE_COLOR AS PLATE_COLOR_ID, M.COMMADDR AS T_IDENTIFYNO, T.OEM_CODE AS OEMCODE, T.TMODEL_CODE, T.TID, V.VIN_CODE, V.ENT_ID AS TEAM_ID, V.VEHICLE_TYPE FROM TB_SIM M	 INNER JOIN TR_SERVICEUNIT S	  ON S.SID = M.SID    INNER JOIN TB_VEHICLE V ON V.VID = S.VID INNER JOIN TB_TERMINAL T ON T.TID = S.TID WHERE COMMADDR IS NOT NULL AND V.ENABLE_FLAG = '1' AND T.ENABLE_FLAG = '1' AND (M.UPDATE_TIME >= ? OR M.CREATE_TIME >= ? OR S.UPDATE_TIME >= ? OR S.CREATE_TIME >= ? OR V.UPDATE_TIME >= ? OR V.CREATE_TIME >= ? OR T.UPDATE_TIME >= ? OR T.CREATE_TIME >= ?)</property>
				<property name="sql_syncAll_3g" desc="3g全量同步查询语句">SELECT S.SUID, V.VID AS VID, V.PLATE_COLOR AS PLATE_COLOR_ID, M.COMMADDR  AS T_IDENTIFYNO, T.OEM_CODE  AS OEMCODE, T.TMODEL_CODE, T.TID, VEHICLE_NO, TD.DVR_SIMNUM, V.VIN_CODE, V.ENT_ID AS TEAM_ID, V.VEHICLE_TYPE FROM TB_SIM M INNER JOIN TR_SERVICEUNIT S ON S.SID = M.SID INNER JOIN TB_VEHICLE V ON V.VID = S.VID INNER JOIN TB_TERMINAL T ON T.TID = S.TID INNER JOIN KCPT.TB_DVR TD ON TD.DVR_ID = S.DVR_ID WHERE TD.DVR_SIMNUM IS NOT NULL AND V.ENABLE_FLAG = '1' AND T.ENABLE_FLAG = '1' AND T.TER_STATE = 2</property>
				<property name="sql_syncIncrements_3g" desc="3g增量同步查询语句">SELECT S.SUID, V.VID AS VID, V.PLATE_COLOR AS PLATE_COLOR_ID, M.COMMADDR  AS T_IDENTIFYNO, T.OEM_CODE  AS OEMCODE, T.TMODEL_CODE, T.TID, VEHICLE_NO, TD.DVR_SIMNUM, V.VIN_CODE, V.ENT_ID AS TEAM_ID, V.VEHICLE_TYPE FROM TB_SIM M INNER JOIN TR_SERVICEUNIT S ON S.SID = M.SID INNER JOIN TB_VEHICLE V ON V.VID = S.VID INNER JOIN TB_TERMINAL T ON T.TID = S.TID INNER JOIN KCPT.TB_DVR TD ON TD.DVR_ID = S.DVR_ID WHERE TD.DVR_SIMNUM IS NOT NULL AND V.ENABLE_FLAG = '1' AND T.ENABLE_FLAG = '1' AND T.TER_STATE = 2 AND (M.UPDATE_TIME >= ? OR M.CREATE_TIME >= ? OR S.UPDATE_TIME >= ? OR S.CREATE_TIME >= ? OR V.UPDATE_TIME >= ? OR V.CREATE_TIME >= ? OR T.UPDATE_TIME >= ? OR T.CREATE_TIME >= ? OR TD.UPDATE_TIME >=? OR TD.CREATE_TIME >=?)</property>
			</properties>
		</task>
		
		<task name="OrgParentSyncTask" enable="true" desc="车辆父级组织编号同步任务">
			<class desc="任务实现类(继承TaskAdapter)">com.ctfo.commandservice.task.OrgParentSyncTask</class>
			<interval unit="minute" delay="5" desc="任务间隔">5</interval>
			<properties desc="自定义配置">
				<property name="intervalTime" desc="清理间隔(单位:分钟 ; 默认60分钟)">60</property>
				<property name="sql_syncAll" desc="全量同步查询语句"       >SELECT ORG.ENT_ID AS MOTORCADE,(SELECT TO_CHAR(WM_CONCAT(T.ENT_ID))  FROM TB_ORGANIZATION T  WHERE T.ENABLE_FLAG = '1'  AND T.ENT_TYPE = 1 START WITH T.ENT_ID = ORG.PARENT_ID CONNECT BY PRIOR T.PARENT_ID = T.ENT_ID) PARENT_ID FROM TB_ORGANIZATION ORG WHERE ORG.ENABLE_FLAG = '1' AND ORG.ENT_TYPE = 2</property>
				<property name="sql_syncIncrements" desc="增量同步查询语句">SELECT ORG.ENT_ID AS MOTORCADE,(SELECT TO_CHAR(WM_CONCAT(T.ENT_ID))  FROM TB_ORGANIZATION T  WHERE T.ENABLE_FLAG = '1'  AND T.ENT_TYPE = 1 AND (T.CREATE_TIME >= ? OR T.UPDATE_BY >= ?) START WITH T.ENT_ID = ORG.PARENT_ID CONNECT BY PRIOR T.PARENT_ID = T.ENT_ID) PARENT_ID FROM TB_ORGANIZATION ORG WHERE ORG.ENABLE_FLAG = '1' AND ORG.ENT_TYPE = 2 AND (ORG.CREATE_TIME >= ? OR ORG.UPDATE_BY >= ?)</property>
			</properties>
		</task>
	</tasks>
	
	
	<config>
		<property name="customOutTime" desc="自定义指令缓存过期时间(单位:毫秒)">60000</property>
		<property name="customBatchSize" desc="自定义指令批量存储数量(单位:条)">500</property>
		<property name="customBatchTime" desc="自定义指令批量存储间隔(单位:毫秒)">3000</property>
		<property name="customExpireSeconds" desc="自定义指令过期时间 单位:秒">120</property>
		<!-- 油量信息存储SQL -->
		<property name="sql_saveOilInfo" desc="更新或者插入油箱油量标定信息">
				MERGE INTO TB_TERMINAL_OILBOX_SET T1
	            	USING (SELECT ? AS FUEL_TANK,? AS AD_FALL,? AS ADDOIL_THRESHOLD,? AS OILSPILL_THRESHOLD,? AS SEQ,? AS VID FROM dual) T2
	            ON ( T1.VID=T2.VID)
	            WHEN MATCHED THEN
	              UPDATE SET T1.FUEL_TANK=T2.FUEL_TANK,T1.AD_FALL=T2.AD_FALL,T1.ADDOIL_THRESHOLD=T2.ADDOIL_THRESHOLD,T1.OILSPILL_THRESHOLD=T2.OILSPILL_THRESHOLD,T1.SEQ=T2.SEQ
	            WHEN NOT MATCHED THEN 
	              INSERT (VID,FUEL_TANK,AD_FALL,ADDOIL_THRESHOLD,OILSPILL_THRESHOLD,SEQ) VALUES(T2.VID,T2.FUEL_TANK,T2.AD_FALL,T2.ADDOIL_THRESHOLD,T2.OILSPILL_THRESHOLD,T2.SEQ)
	    </property>
		<property name="sql_saveOilChanged" desc="存储油量变化记录SQL">INSERT INTO TH_OILMASS_CHANGE_DETAIL (CHANGE_TYPE,VID,UTC,LAT,LON,MAPLON,MAPLAT,ELEVATION,DIRECTION,GPS_SPEED,SYSUTC,CURR_OILLEVEL,CURR_OILMAS,CHANGE_OILMASS,CHANGE_ID) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)</property>
		<property name="sql_saveStealingOilAlarm" desc="存储偷漏油报警SQL">INSERT INTO TH_VEHICLE_ALARM (ALARM_ID,VID,UTC,LAT,LON,MAPLON,MAPLAT,ELEVATION,DIRECTION,GPS_SPEED,ALARM_CODE,SYSUTC,ALARM_START_UTC,BGLEVEL,ALARM_END_UTC,END_LAT,END_LON,END_MAPLAT,END_MAPLON,END_ELEVATION,END_DIRECTION,END_GPS_SPEED,ALARM_STATUS) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,0)</property>
		
		<!-- 自定义指令存储更新SQL -->
		<property name="sql_saveCustomCommand" desc="更新自定义指令状态SQL">INSERT INTO KCPT.TH_CUSTOM_COMMAND(ID,SEQ,VID,STATE,CREATE_ID,CREATE_UTC) VALUES(?,?,?,?,?,?)</property>
		<property name="sql_saveCustomCommandDetail" desc="存储自定义上传指令SQL">INSERT INTO KCPT.TH_CUSTOM_COMMAND_DETAIL(SEQ,UTC,INFO_TYPE,MESSAGE_CONTEXT,TYPE) VALUES(?,?,?,?,?)</property>
	</config>
	
</configuration>